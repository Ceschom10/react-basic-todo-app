{"version":3,"sources":["assets/image/logo.svg","redux/constants/index.js","redux/reducers/appReducer.js","redux/reducers/index.js","redux/store/index.js","containers/Home.js","redux/selectors/index.js","redux/actions/index.js","utils/index.js","containers/Item/layout.js","containers/Item/index.js","containers/List/layout.js","containers/List/index.js","containers/Create/layout.js","containers/Create/index.js","containers/Edit/layout.js","containers/Edit/index.js","components/SidePanel.js","containers/Main/layout.js","containers/Main/index.js","containers/About.js","components/Routing/Menu.js","components/Routing/NotFound.js","components/Routing/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ADD_ITEM","UPDATE_ITEM","REMOVE_ITEM","SET_SELECTED_ITEM_ID","SET_RENDER_CREATE","SET_RENDER_EDIT","CLOSE_PANEL","CLEAR_LIST","TOGGLE_ALL","OPEN_CREATE_PANEL","OPEN_EDIT_PANEL","initialState","fromJS","items","id","name","description","type","createdAt","isCompleted","renderCreate","renderEdit","selectedItemId","getItemIndex","state","entity","itemId","get","findIndex","item","appReducer","action","ACTIONS","update","unshift","payload","itemIndex","updateIn","merge","deleteIn","set","List","map","bool","reducers","combineReducers","app","form","formReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Home","className","getAllItems","getIn","getSelectedItemId","getSelectedItem","find","getRenderCreate","getRenderEdit","formSubmit","updateItem","addItem","uuid","Date","now","taskTypes","value","label","Layout","props","onRemoveItem","handleChange","handleBlur","handleKeyDown","handleCheck","onOpenEditPanel","handleDoubleClick","onDoubleClick","placeholder","onChange","onBlur","onKeyDown","replace","match","toUpperCase","moment","format","checked","onClick","Item","e","setState","target","handleUpdate","onUpdateItem","keyCode","prevState","history","push","prevProps","this","handleSubmit","Component","actions","connect","withRouter","checkedAll","rest","key","onToggleAll","pristine","reset","submitting","content","onSubmit","autoComplete","htmlFor","component","disabled","option","cols","rows","undefined","propTypes","PropTypes","string","func","shape","Form","reduxForm","values","dispatch","destroyOnUnmount","ConnectedForm","initialValues","setSelectedItemId","params","SidePanel","handleClose","children","handleInputChange","onClearList","onClosePanel","onOpenCreatePanel","Create","Edit","Main","preventDefault","trim","newItem","onAddItem","About","Menu","to","NotFound","Routing","path","exact","App","src","logo","alt","href","rel","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b5d9d896.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/**\n * action-types\n */\n\nexport const FORM_SUBMIT = 'app/MainApplication/FORM_SUBMIT';\n\nexport const ADD_ITEM = 'app/MainApplication/ADD_ITEM';\n\nexport const UPDATE_ITEM = 'app/MainApplication/UPDATE_ITEM';\n\nexport const REMOVE_ITEM = 'app/MainApplication/REMOVE_ITEM';\n\nexport const SET_SELECTED_ITEM_ID = 'app/MainApplication/SET_SELECTED_ITEM_ID';\n\nexport const SET_RENDER_CREATE = 'app/MainApplication/SET_RENDER_CREATE';\n\nexport const SET_RENDER_EDIT = 'app/MainApplication/SET_RENDER_EDIT';\n\nexport const CLOSE_PANEL = 'app/MainApplication/CLOSE_PANEL';\n\nexport const CLEAR_LIST = 'app/MainApplication/CLEAR_LIST';\n\nexport const TOGGLE_ALL = 'app/MainApplication/TOGGLE_ALL';\n\nexport const OPEN_CREATE_PANEL = 'app/MainApplication/OPEN_CREATE_PANEL';\n\nexport const OPEN_EDIT_PANEL = 'app/MainApplication/OPEN_EDIT_PANEL';\n","import { fromJS, List } from 'immutable';\nimport * as ACTIONS from '../constants';\n\nconst initialState = fromJS({\n  items: [\n    {\n      id: '6b7d54a2-caff-11ea-87d0-0242ac130003',\n      name: 'Learn how to code',\n      description: 'Spend two hours a day coding',\n      type: 'dev-task',\n      createdAt: 1578831166000,\n      isCompleted: false,\n    },\n    {\n      id: '8e0f82ec-caff-11ea-87d0-0242ac130003',\n      name: 'Learn how to cook',\n      description: 'Stop eating cereal all day',\n      type: 'daily-task',\n      createdAt: 1574104366000,\n      isCompleted: false,\n    },\n    {\n      id: 'b033cb6e-ccb0-11ea-87d0-0242ac130003',\n      name: 'Take out the trash',\n      description: \"Do at least that for God's sake\",\n      type: 'daily-task',\n      createdAt: 1549069931000,\n      isCompleted: true,\n    },\n    {\n      id: '66d8e256-d20a-11ea-87d0-0242ac130003',\n      name: 'Wash the dishes',\n      description: 'Or you can eat from the can, your call',\n      type: 'daily-task',\n      createdAt: 1594455449000,\n      isCompleted: false,\n    },\n  ],\n  renderCreate: false,\n  renderEdit: false,\n  selectedItemId: '',\n});\n\nconst getItemIndex = (state, entity, itemId) => state.get(entity).findIndex(item => item.get('id') === itemId);\n\nfunction appReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTIONS.ADD_ITEM: {\n      return state.update('items', items => items.unshift(action.payload));\n    }\n\n    case ACTIONS.UPDATE_ITEM: {\n      const itemIndex = getItemIndex(state, 'items', action.id);\n      return state.updateIn(['items', itemIndex], item => item.merge(action.payload));\n    }\n\n    case ACTIONS.REMOVE_ITEM: {\n      const itemIndex = getItemIndex(state, 'items', action.id);\n      if (state.get('selectedItemId') === action.id) {\n        return state.deleteIn(['items', itemIndex]).set('renderEdit', false).set('selectedItemId', '');\n      }\n      return state.deleteIn(['items', itemIndex]);\n    }\n\n    case ACTIONS.SET_SELECTED_ITEM_ID: {\n      return state.set('selectedItemId', action.id);\n    }\n\n    case ACTIONS.SET_RENDER_CREATE: {\n      return state.set('renderCreate', action.payload);\n    }\n\n    case ACTIONS.SET_RENDER_EDIT: {\n      return state.set('renderEdit', action.payload);\n    }\n\n    case ACTIONS.OPEN_CREATE_PANEL: {\n      return state.set('renderCreate', true).set('renderEdit', false).set('selectedItemId', '');\n    }\n\n    case ACTIONS.OPEN_EDIT_PANEL: {\n      return state.set('renderCreate', false).set('renderEdit', true).set('selectedItemId', action.id);\n    }\n\n    case ACTIONS.CLOSE_PANEL: {\n      return state.set('renderCreate', false).set('renderEdit', false).set('selectedItemId', '');\n    }\n\n    case ACTIONS.CLEAR_LIST: {\n      return state.set('items', new List([])).set('renderEdit', false).set('selectedItemId', '');\n    }\n\n    case ACTIONS.TOGGLE_ALL: {\n      return state.update('items', items => items.map(item => item.set('isCompleted', action.bool)));\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default appReducer;\n","import { combineReducers } from 'redux-immutable';\nimport { reducer as formReducer } from 'redux-form/immutable';\n\nimport appReducer from './appReducer';\n\nconst reducers = combineReducers({\n  app: appReducer,\n  // you have to pass formReducer under 'form' key,\n  // for custom keys look up the docs for 'getFormState'\n  form: formReducer,\n});\n\nexport default reducers;\n","import { createStore } from 'redux';\nimport reducers from '../reducers';\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n/* eslint-enable */\n\nexport default store;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"App-main\">\n    <div className=\"App-list\">\n      <h1>Welcome to our APP</h1>\n    </div>\n  </div>\n);\n\nexport default Home;\n","import { List } from 'immutable';\n\nexport const getAllItems = state => state.getIn(['app', 'items'], new List([]));\n\nexport const getItem = (state, id) => state.getIn(['app', 'items'], new List([])).find(item => item.get('id') === id);\n\nexport const getSelectedItemId = state => state.getIn(['app', 'selectedItemId']);\n\nexport const getSelectedItem = state =>\n  state.getIn(['app', 'items'], new List([])).find(item => item.get('id') === getSelectedItemId(state));\n\nexport const getRenderCreate = state => state.getIn(['app', 'renderCreate'], false);\n\nexport const getRenderEdit = state => state.getIn(['app', 'renderEdit'], false);\n","import { v1 as uuid } from 'uuid';\nimport * as ACTIONS from '../constants';\n\nexport function formSubmit(action, payload) {\n  if (action === 'edit') {\n    return updateItem(payload.get('id'), payload);\n  }\n\n  return addItem(payload.set('id', uuid()).set('createdAt', Date.now()).set('isCompleted', false));\n}\n\nexport function addItem(payload) {\n  return {\n    type: ACTIONS.ADD_ITEM,\n    payload,\n  };\n}\n\nexport function updateItem(id, payload) {\n  return {\n    type: ACTIONS.UPDATE_ITEM,\n    id,\n    payload,\n  };\n}\n\nexport function removeItem(id) {\n  return {\n    type: ACTIONS.REMOVE_ITEM,\n    id,\n  };\n}\n\nexport function setSelectedItemId(id) {\n  return {\n    type: ACTIONS.SET_SELECTED_ITEM_ID,\n    id,\n  };\n}\n\nexport function setRenderCreate(payload) {\n  return {\n    type: ACTIONS.SET_RENDER_CREATE,\n    payload,\n  };\n}\n\nexport function setRenderEdit(payload) {\n  return {\n    type: ACTIONS.SET_RENDER_EDIT,\n    payload,\n  };\n}\n\nexport function closePanel() {\n  return {\n    type: ACTIONS.CLOSE_PANEL,\n  };\n}\n\nexport function clearList() {\n  return {\n    type: ACTIONS.CLEAR_LIST,\n  };\n}\n\nexport function toggleAll(bool) {\n  return {\n    type: ACTIONS.TOGGLE_ALL,\n    bool,\n  };\n}\n\nexport function openCreatePanel() {\n  return {\n    type: ACTIONS.OPEN_CREATE_PANEL,\n  };\n}\n\nexport function openEditPanel(id) {\n  return {\n    type: ACTIONS.OPEN_EDIT_PANEL,\n    id,\n  };\n}\n","export function humanize(str) {\n  return str\n    .replace(/^[\\s_]+|[\\s_]+$/g, '')\n    .replace(/[_\\s]+/g, ' ')\n    .replace(/[-\\s]+/g, ' ')\n    .replace(/^[a-z]/, match => match.toUpperCase());\n}\n\nexport const taskTypes = [\n  { value: 'dev-task', label: 'Development task' },\n  { value: 'daily-task', label: 'Daily task' },\n  { value: 'routine', label: 'Routine' },\n  { value: 'incidentals', label: 'Incidentals' },\n  { value: 'projects', label: 'Projects' },\n  { value: 'problems', label: 'Problems' },\n  { value: 'researching', label: 'Researching' },\n  { value: 'testing', label: 'Testing' },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport moment from 'moment';\nimport { humanize } from '../../utils';\nfunction Layout(props) {\n  const {\n    item,\n    name,\n    isCompleted,\n    onRemoveItem,\n    handleChange,\n    handleBlur,\n    handleKeyDown,\n    handleCheck,\n    onOpenEditPanel,\n    handleDoubleClick,\n  } = props;\n\n  return (\n    <div className=\"rTableRow\" onDoubleClick={handleDoubleClick}>\n      <div className=\"rTableCell\">\n        <span>{item.get('id')}</span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>\n          {isCompleted ? (\n            <span className=\"item-completed\">{item.get('name')}</span>\n          ) : (\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter a task name...\"\n              value={name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              onKeyDown={handleKeyDown}\n            />\n          )}\n        </span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>{humanize(item.get('type'))}</span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>{item.get('description')}</span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>{moment(item.get('createdAt')).format('lll')}</span>\n      </div>\n      <div className=\"rTableCell rTableAction\">\n        <span>\n          <input type=\"checkbox\" name=\"isCompleted\" checked={isCompleted} onChange={handleCheck} />\n        </span>\n      </div>\n      <div className=\"rTableCell rTableAction\">\n        <button type=\"button\" onClick={() => onOpenEditPanel(item.get('id'))}>\n          Edit\n        </button>\n        <button type=\"button\" onClick={() => onRemoveItem(item.get('id'))}>\n          X\n        </button>\n      </div>\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  item: ImmutablePropTypes.contains({\n    name: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    id: PropTypes.string,\n  }),\n  name: PropTypes.string,\n  isCompleted: PropTypes.bool,\n  onRemoveItem: PropTypes.func,\n  handleChange: PropTypes.func,\n  handleBlur: PropTypes.func,\n  handleKeyDown: PropTypes.func,\n  handleCheck: PropTypes.func,\n  onOpenEditPanel: PropTypes.func,\n  handleDoubleClick: PropTypes.func,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fromJS } from 'immutable';\nimport Layout from './layout';\nimport { updateItem, removeItem, openEditPanel } from '../../redux/actions';\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n\n    const name = props.item.get('name');\n    const isCompleted = props.item.get('isCompleted');\n    this.state = {\n      name,\n      isCompleted,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const name = this.props.item.get('name');\n    const isCompleted = this.props.item.get('isCompleted');\n\n    if (prevProps.item.get('name') !== name) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ name });\n    }\n    if (prevProps.item.get('isCompleted') !== isCompleted) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ isCompleted });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  handleUpdate = () => {\n    const { item, onUpdateItem } = this.props;\n    const { name } = this.state;\n    /**\n     * Avoiding firing update event twice\n     * if user already pressed enter\n     */\n    if (item.get('name') !== name) {\n      onUpdateItem(item.get('id'), fromJS({ name }));\n    }\n  };\n\n  handleBlur = () => {\n    this.handleUpdate();\n  };\n\n  handleKeyDown = ({ keyCode }) => {\n    /**\n     * User pressed the enter key, update the input\n     * and global state\n     */\n    if (keyCode === 13) {\n      this.handleUpdate();\n    }\n  };\n\n  handleCheck = () => {\n    const { item, onUpdateItem } = this.props;\n    const { isCompleted } = this.state;\n    onUpdateItem(\n      item.get('id'),\n      fromJS({\n        isCompleted: !isCompleted,\n      }),\n    );\n    this.setState(prevState => ({\n      isCompleted: !prevState.isCompleted,\n    }));\n  };\n\n  handleDoubleClick = () => {\n    const { item } = this.props;\n    this.props.history.push(`/edit/${item.get('id')}`);\n  };\n\n  render() {\n    const { item, onRemoveItem, onOpenEditPanel } = this.props;\n    const { name, isCompleted } = this.state;\n\n    return (\n      <Layout\n        item={item}\n        name={name}\n        isCompleted={isCompleted}\n        onRemoveItem={onRemoveItem}\n        handleChange={this.handleChange}\n        handleBlur={this.handleBlur}\n        handleKeyDown={this.handleKeyDown}\n        handleCheck={this.handleCheck}\n        onOpenEditPanel={onOpenEditPanel}\n        handleSubmit={this.handleSubmit}\n        handleDoubleClick={this.handleDoubleClick}\n      />\n    );\n  }\n}\n\nItem.propTypes = {\n  item: ImmutablePropTypes.contains({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    isCompleted: PropTypes.bool,\n  }),\n  onRemoveItem: PropTypes.func,\n  onUpdateItem: PropTypes.func,\n  onOpenEditPanel: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n};\n\nconst actions = {\n  onUpdateItem: updateItem,\n  onRemoveItem: removeItem,\n  onOpenEditPanel: openEditPanel,\n};\n\nexport default connect(null, actions)(withRouter(Item));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Item from '../Item';\n\nfunction Layout(props) {\n  const { items, checkedAll, handleCheck, ...rest } = props;\n  return (\n    <div className=\"rTable\">\n      <div className=\"rTableHeading\">\n        <div className=\"rTableHead\">\n          <span>ID</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Name</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Type</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Description</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Created at</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>\n            Completed\n            <input type=\"checkbox\" name=\"checkedAll\" checked={checkedAll} onChange={handleCheck} />\n          </span>\n        </div>\n        <div className=\"rTableHead rTableAction\">&nbsp;</div>\n      </div>\n\n      <div className=\"rTableBody\">\n        {items.map(item => (\n          <Item key={item.get('id')} item={item} {...rest} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  items: ImmutablePropTypes.listOf(\n    ImmutablePropTypes.contains({\n      name: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n  checkedAll: PropTypes.bool,\n  handleCheck: PropTypes.func,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Layout from './layout';\n\nimport { getAllItems } from '../../redux/selectors';\nimport { toggleAll } from '../../redux/actions';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkedAll: false,\n    };\n  }\n\n  handleCheck = () => {\n    const { checkedAll } = this.state;\n    this.props.onToggleAll(!checkedAll);\n\n    this.setState(prevState => ({\n      checkedAll: !prevState.checkedAll,\n    }));\n  };\n\n  render() {\n    const { checkedAll } = this.state;\n    const { items, ...rest } = this.props;\n\n    return <Layout items={items} checkedAll={checkedAll} handleCheck={this.handleCheck} {...rest} />;\n  }\n}\n\nList.propTypes = {\n  items: ImmutablePropTypes.listOf(\n    ImmutablePropTypes.contains({\n      name: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n  onToggleAll: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  items: getAllItems(state),\n});\n\nconst actions = {\n  onToggleAll: toggleAll,\n};\n\nexport default connect(mapStateToProps, actions)(List);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React from 'react';\nimport { Field } from 'redux-form/immutable';\nimport PropTypes from 'prop-types';\nimport { taskTypes } from '../../utils';\n\nfunction Layout(props) {\n  const { key, handleSubmit, pristine, reset, submitting } = props;\n\n  let content = (\n    <form onSubmit={handleSubmit} key={key} autoComplete=\"off\">\n      <label htmlFor=\"name\">\n        <span className=\"required\">Name:</span>\n        <Field name=\"name\" component=\"input\" type=\"text\" placeholder=\"Enter a task name...\" />\n      </label>\n\n      <label htmlFor=\"type\">\n        <span className=\"required\">Pick task type:</span>\n        <Field name=\"type\" component=\"select\">\n          <option value=\"\" disabled>\n            Select a type...\n          </option>\n          {taskTypes.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </Field>\n      </label>\n\n      <label htmlFor=\"description\">\n        <span>Description:</span>\n        <Field name=\"description\" component=\"textarea\" placeholder=\"Add a description...\" cols=\"30\" rows=\"5\" />\n      </label>\n\n      <div className=\"actions-inline\">\n        <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n\n  if (props.match !== undefined) {\n    content = (\n      <div className=\"App-main\">\n        <div className=\"App-list\">{content}</div>\n      </div>\n    );\n  }\n\n  return content;\n}\n\nLayout.propTypes = {\n  key: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  pristine: PropTypes.bool,\n  reset: PropTypes.func,\n  submitting: PropTypes.bool,\n  match: PropTypes.shape({}),\n};\n\nexport default Layout;\n","import { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form/immutable';\nimport { fromJS } from 'immutable';\nimport Layout from './layout';\nimport { formSubmit } from '../../redux/actions';\n\nconst Form = reduxForm({\n  form: 'form:create',\n  onSubmit: (values, dispatch) => dispatch(formSubmit('create', values)),\n  destroyOnUnmount: true,\n})(Layout);\n\nconst mapStateToProps = () => ({\n  key: 'form:create',\n  initialValues: fromJS({}),\n});\nconst ConnectedForm = connect(mapStateToProps)(Form);\n\nexport default ConnectedForm;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React, { Component } from 'react';\nimport { Field } from 'redux-form/immutable';\nimport PropTypes from 'prop-types';\nimport { taskTypes } from '../../utils';\n\nclass Layout extends Component {\n  componentDidMount() {\n    const { match, setSelectedItemId } = this.props;\n    /**\n     * If form is not incrusted, then get\n     * id from url\n     */\n    if (match !== undefined) {\n      setSelectedItemId(match.params.id);\n    }\n  }\n\n  render() {\n    const { key, selectedItemId, handleSubmit, pristine, reset, submitting } = this.props;\n\n    let content = (\n      <form onSubmit={handleSubmit} key={key} autoComplete=\"off\">\n        <label htmlFor=\"id\">\n          <span>ID:</span>\n          <span>{selectedItemId}</span>\n        </label>\n\n        <label htmlFor=\"name\">\n          <span className=\"required\">Name:</span>\n          <Field name=\"name\" component=\"input\" type=\"text\" placeholder=\"Enter a task name...\" />\n        </label>\n\n        <label htmlFor=\"type\">\n          <span className=\"required\">Pick task type:</span>\n          <Field name=\"type\" component=\"select\">\n            <option value=\"\" disabled>\n              Select a type...\n            </option>\n            {taskTypes.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </Field>\n        </label>\n\n        <label htmlFor=\"description\">\n          <span>Description:</span>\n          <Field name=\"description\" component=\"textarea\" placeholder=\"Add a description...\" cols=\"30\" rows=\"5\" />\n        </label>\n\n        <label className=\"label-checkbox\" htmlFor=\"isCompleted\">\n          <span>Is completed?</span>\n          <Field name=\"isCompleted\" component=\"input\" type=\"checkbox\" className=\"a11y-hidden\" />\n        </label>\n\n        <div className=\"actions-inline\">\n          <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n          <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n            Clear Values\n          </button>\n        </div>\n      </form>\n    );\n\n    if (this.props.match !== undefined) {\n      content = (\n        <div className=\"App-main\">\n          <div className=\"App-list\">{content}</div>\n        </div>\n      );\n    }\n\n    return content;\n  }\n}\n\nLayout.propTypes = {\n  key: PropTypes.string,\n  selectedItemId: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  setSelectedItemId: PropTypes.func,\n  pristine: PropTypes.bool,\n  reset: PropTypes.func,\n  submitting: PropTypes.bool,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Layout;\n","import { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form/immutable';\nimport Layout from './layout';\nimport { formSubmit, setSelectedItemId } from '../../redux/actions';\nimport { getSelectedItemId, getSelectedItem } from '../../redux/selectors';\n\nconst Form = reduxForm({\n  onSubmit: (values, dispatch) => dispatch(formSubmit('edit', values)),\n  destroyOnUnmount: true,\n})(Layout);\n\nconst mapStateToProps = state => ({\n  form: `form:${getSelectedItemId(state)}`,\n  key: `form:${getSelectedItemId(state)}`,\n  initialValues: getSelectedItem(state),\n  selectedItemId: getSelectedItemId(state),\n});\n\nconst actions = {\n  setSelectedItemId,\n};\n\nconst ConnectedForm = connect(mapStateToProps, actions)(Form);\n\nexport default ConnectedForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SidePanel(props) {\n  const { handleClose, children } = props;\n  return (\n    <div className=\"App-sidepanel\">\n      <button type=\"button\" className=\"close-panel\" onClick={handleClose}>\n        X\n      </button>\n      {children}\n    </div>\n  );\n}\nSidePanel.propTypes = {\n  children: PropTypes.shape({}),\n  handleClose: PropTypes.func,\n};\n\nexport default SidePanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport List from '../List';\nimport Create from '../Create';\nimport Edit from '../Edit';\nimport SidePanel from '../../components/SidePanel';\n\nfunction Layout(props) {\n  const {\n    name,\n    handleInputChange,\n    handleSubmit,\n    renderCreate,\n    renderEdit,\n    selectedItemId,\n    onClearList,\n    onClosePanel,\n    onOpenCreatePanel,\n  } = props;\n\n  return (\n    <div className=\"App-main\">\n      <div className=\"App-list\">\n        <header>\n          <form onSubmit={handleSubmit} className=\"form-inline\" autoComplete=\"off\">\n            <input type=\"text\" name=\"name\" placeholder=\"Enter a text...\" value={name} onChange={handleInputChange} />\n            <input type=\"submit\" value=\"Add\" />\n\n            <button type=\"button\" onClick={onOpenCreatePanel}>\n              Create\n            </button>\n\n            <button type=\"button\" onClick={onClearList}>\n              Clear List\n            </button>\n          </form>\n        </header>\n\n        <div className=\"rTable-container\">\n          <List />\n        </div>\n      </div>\n\n      {renderCreate && (\n        <SidePanel handleClose={onClosePanel}>\n          <Create />\n        </SidePanel>\n      )}\n      {renderEdit && selectedItemId && (\n        <SidePanel handleClose={onClosePanel}>\n          <Edit key={selectedItemId} />\n        </SidePanel>\n      )}\n    </div>\n  );\n}\n\nLayout.propTypes = {\n  renderCreate: PropTypes.bool,\n  renderEdit: PropTypes.bool,\n  selectedItemId: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  name: PropTypes.string,\n  handleInputChange: PropTypes.func,\n  onClearList: PropTypes.func,\n  onClosePanel: PropTypes.func,\n  onOpenCreatePanel: PropTypes.func,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { fromJS } from 'immutable';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v1 as uuid } from 'uuid';\n\nimport { getSelectedItemId, getRenderCreate, getRenderEdit } from '../../redux/selectors';\nimport { addItem, closePanel, clearList, openCreatePanel } from '../../redux/actions';\nimport Layout from './layout';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n    };\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    /**\n     * We prevent page from refreshing\n     */\n    e.preventDefault();\n\n    const { name } = this.state;\n\n    /**\n     * Text is empty, clean and return\n     */\n    if (name.trim() === '') {\n      this.setState({\n        name: '',\n      });\n      return;\n    }\n\n    /**\n     * New item with default data\n     */\n    const newItem = fromJS({\n      id: uuid(),\n      name,\n      description: '',\n      type: 'daily-task',\n      createdAt: Date.now(),\n      isCompleted: false,\n    });\n    /**\n     * We call the handler for new items and pass\n     * an object with new task and key\n     */\n    this.props.onAddItem(newItem);\n\n    this.setState({\n      name: '',\n    });\n  };\n\n  render() {\n    const { name } = this.state;\n    const { renderCreate, renderEdit, selectedItemId, onClearList, onClosePanel, onOpenCreatePanel } = this.props;\n\n    return (\n      <Layout\n        name={name}\n        handleInputChange={this.handleInputChange}\n        handleSubmit={this.handleSubmit}\n        renderCreate={renderCreate}\n        renderEdit={renderEdit}\n        selectedItemId={selectedItemId}\n        onClearList={onClearList}\n        onClosePanel={onClosePanel}\n        onOpenCreatePanel={onOpenCreatePanel}\n      />\n    );\n  }\n}\n\nMain.propTypes = {\n  renderCreate: PropTypes.bool,\n  renderEdit: PropTypes.bool,\n  selectedItemId: PropTypes.string,\n  onAddItem: PropTypes.func,\n  onClearList: PropTypes.func,\n  onClosePanel: PropTypes.func,\n  onOpenCreatePanel: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  renderCreate: getRenderCreate(state),\n  renderEdit: getRenderEdit(state),\n  selectedItemId: getSelectedItemId(state),\n});\n\nconst actions = {\n  onAddItem: addItem,\n  onClearList: clearList,\n  onClosePanel: closePanel,\n  onOpenCreatePanel: openCreatePanel,\n};\n\nexport default connect(mapStateToProps, actions)(Main);\n","import React from 'react';\n\nconst About = () => (\n  <div className=\"App-main\">\n    <div className=\"App-list\">\n      <h1>Tusa Inc</h1>\n      <h6>All rights reserved</h6>\n      <p>We are a company that makes ReactJs APPs for living</p>\n      <p>But when the night arrives... We get out the forbidden dance moves.</p>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Menu = () => (\n  <>\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <ul className=\"navbar-nav mr-auto\">\n        <li>\n          <Link to=\"/\" className=\"nav-link\">\n            Home\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/list\" className=\"nav-link\">\n            Todos\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/new\" className=\"nav-link\">\n            New Task\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/about\" className=\"nav-link\">\n            About\n          </Link>\n        </li>\n      </ul>\n    </nav>\n    <hr />\n  </>\n);\n\nexport default Menu;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div className=\"App-main\">\n    <div className=\"App-list\">\n      <div className=\"content-not-found\">\n        <h1>Not Found</h1>\n;\n      </div>\n    </div>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Home from '../../containers/Home';\nimport Main from '../../containers/Main';\nimport Create from '../../containers/Create';\nimport Edit from '../../containers/Edit';\nimport About from '../../containers/About';\nimport Menu from './Menu';\nimport NotFound from './NotFound';\n\nconst Routing = () => (\n  <div>\n    <HashRouter>\n      <Menu />\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/home\" component={Home} exact />\n        <Route path=\"/list\" component={Main} exact />\n        <Route path=\"/new\" component={Create} exact />\n        <Route path=\"/edit/:id\" component={Edit} exact />\n        <Route path=\"/about\" component={About} exact />\n        <Route component={NotFound} />\n        <Redirect to=\"/home\" />\n      </Switch>\n    </HashRouter>\n  </div>\n);\n\nexport default Routing;\n","import React from 'react';\n\nimport Routing from './components/Routing';\n\nimport logo from './assets/image/logo.svg';\nimport './assets/css/App.css';\nimport './assets/css/table.css';\nimport './assets/css/form.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Learn React\n        </a>\n      </header>\n\n      <Routing />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}