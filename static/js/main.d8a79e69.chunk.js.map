{"version":3,"sources":["assets/image/logo.svg","redux/constants/index.js","redux/reducers/appReducer.js","redux/reducers/index.js","redux/store/index.js","containers/Home.js","redux/selectors/index.js","redux/actions/index.js","utils/index.js","containers/Item/layout.js","containers/Item/index.js","containers/List/layout.js","containers/List/index.js","containers/Create/layout.js","containers/Create/index.js","containers/Edit/layout.js","containers/Edit/index.js","components/SidePanel.js","containers/Main/layout.js","containers/Main/index.js","containers/About.js","components/Routing/Menu.js","components/Routing/NotFound.js","components/Routing/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ADD_ITEM","UPDATE_ITEM","REMOVE_ITEM","SET_SELECTED_ITEM_ID","SET_RENDER_CREATE","SET_RENDER_EDIT","CLOSE_PANEL","CLEAR_LIST","TOGGLE_ALL","OPEN_CREATE_PANEL","OPEN_EDIT_PANEL","initialState","fromJS","items","renderCreate","renderEdit","selectedItemId","getItemIndex","state","entity","itemId","get","findIndex","item","appReducer","action","type","ACTIONS","update","unshift","payload","itemIndex","id","updateIn","merge","deleteIn","set","List","map","bool","reducers","combineReducers","app","form","formReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Home","className","getAllItems","getIn","getSelectedItemId","getSelectedItem","find","getRenderCreate","getRenderEdit","formSubmit","updateItem","addItem","uuid","Date","now","taskTypes","value","label","Layout","props","name","isCompleted","onRemoveItem","handleChange","handleBlur","handleKeyDown","handleCheck","onOpenEditPanel","handleDoubleClick","onDoubleClick","placeholder","onChange","onBlur","onKeyDown","replace","match","toUpperCase","moment","format","checked","onClick","Item","e","setState","target","handleUpdate","onUpdateItem","keyCode","prevState","history","push","prevProps","this","handleSubmit","Component","actions","connect","withRouter","checkedAll","rest","key","onToggleAll","pristine","reset","submitting","mode","content","onSubmit","autoComplete","htmlFor","component","disabled","option","cols","rows","Form","reduxForm","values","dispatch","destroyOnUnmount","ConnectedForm","initialValues","setSelectedItemId","params","SidePanel","handleClose","children","handleInputChange","onClearList","onClosePanel","onOpenCreatePanel","Create","Edit","client","contentful","space","accessToken","Main","storeRetrievedTodos","getEntries","content_type","then","todos","fields","createdAt","sys","getTime","catch","err","console","error","preventDefault","trim","newItem","description","onAddItem","About","Menu","to","NotFound","Routing","path","exact","App","src","logo","alt","href","rel","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d8a79e69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/**\n * action-types\n */\n\nexport const FORM_SUBMIT = 'app/MainApplication/FORM_SUBMIT';\n\nexport const ADD_ITEM = 'app/MainApplication/ADD_ITEM';\n\nexport const UPDATE_ITEM = 'app/MainApplication/UPDATE_ITEM';\n\nexport const REMOVE_ITEM = 'app/MainApplication/REMOVE_ITEM';\n\nexport const SET_SELECTED_ITEM_ID = 'app/MainApplication/SET_SELECTED_ITEM_ID';\n\nexport const SET_RENDER_CREATE = 'app/MainApplication/SET_RENDER_CREATE';\n\nexport const SET_RENDER_EDIT = 'app/MainApplication/SET_RENDER_EDIT';\n\nexport const CLOSE_PANEL = 'app/MainApplication/CLOSE_PANEL';\n\nexport const CLEAR_LIST = 'app/MainApplication/CLEAR_LIST';\n\nexport const TOGGLE_ALL = 'app/MainApplication/TOGGLE_ALL';\n\nexport const OPEN_CREATE_PANEL = 'app/MainApplication/OPEN_CREATE_PANEL';\n\nexport const OPEN_EDIT_PANEL = 'app/MainApplication/OPEN_EDIT_PANEL';\n\nexport const STORE_RETRIEVED_TODOS = 'app/MainApplication/STORE_RETRIEVED_TODOS';\n","import { fromJS, List } from 'immutable';\nimport * as ACTIONS from '../constants';\n\nconst initialState = fromJS({\n  items: [],\n  renderCreate: false,\n  renderEdit: false,\n  selectedItemId: '',\n});\n\nconst getItemIndex = (state, entity, itemId) => state.get(entity).findIndex(item => item.get('id') === itemId);\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_ITEM: {\n      return state.update('items', items => items.unshift(action.payload));\n    }\n\n    case ACTIONS.UPDATE_ITEM: {\n      const itemIndex = getItemIndex(state, 'items', action.id);\n      return state.updateIn(['items', itemIndex], item => item.merge(action.payload));\n    }\n\n    case ACTIONS.REMOVE_ITEM: {\n      const itemIndex = getItemIndex(state, 'items', action.id);\n      if (state.get('selectedItemId') === action.id) {\n        return state.deleteIn(['items', itemIndex]).set('renderEdit', false).set('selectedItemId', '');\n      }\n      return state.deleteIn(['items', itemIndex]);\n    }\n\n    case ACTIONS.SET_SELECTED_ITEM_ID: {\n      return state.set('selectedItemId', action.id);\n    }\n\n    case ACTIONS.SET_RENDER_CREATE: {\n      return state.set('renderCreate', action.payload);\n    }\n\n    case ACTIONS.SET_RENDER_EDIT: {\n      return state.set('renderEdit', action.payload);\n    }\n\n    case ACTIONS.OPEN_CREATE_PANEL: {\n      return state.set('renderCreate', true).set('renderEdit', false).set('selectedItemId', '');\n    }\n\n    case ACTIONS.OPEN_EDIT_PANEL: {\n      return state.set('renderCreate', false).set('renderEdit', true).set('selectedItemId', action.id);\n    }\n\n    case ACTIONS.CLOSE_PANEL: {\n      return state.set('renderCreate', false).set('renderEdit', false).set('selectedItemId', '');\n    }\n\n    case ACTIONS.CLEAR_LIST: {\n      return state.set('items', new List([])).set('renderEdit', false).set('selectedItemId', '');\n    }\n\n    case ACTIONS.TOGGLE_ALL: {\n      return state.update('items', items => items.map(item => item.set('isCompleted', action.bool)));\n    }\n\n    case ACTIONS.STORE_RETRIEVED_TODOS: {\n      return state.set('items', fromJS(action.payload));\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","import { combineReducers } from 'redux-immutable';\nimport { reducer as formReducer } from 'redux-form/immutable';\n\nimport appReducer from './appReducer';\n\nconst reducers = combineReducers({\n  app: appReducer,\n  // you have to pass formReducer under 'form' key,\n  // for custom keys look up the docs for 'getFormState'\n  form: formReducer,\n});\n\nexport default reducers;\n","import { createStore } from 'redux';\nimport reducers from '../reducers';\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n/* eslint-enable */\n\nexport default store;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"App-main\">\n    <div className=\"App-list\">\n      <h1>Welcome to our APP</h1>\n    </div>\n  </div>\n);\n\nexport default Home;\n","import { List } from 'immutable';\n\nexport const getAllItems = state => state.getIn(['app', 'items'], new List([]));\n\nexport const getItem = (state, id) => state.getIn(['app', 'items'], new List([])).find(item => item.get('id') === id);\n\nexport const getSelectedItemId = state => state.getIn(['app', 'selectedItemId']);\n\nexport const getSelectedItem = state =>\n  state.getIn(['app', 'items'], new List([])).find(item => item.get('id') === getSelectedItemId(state));\n\nexport const getRenderCreate = state => state.getIn(['app', 'renderCreate'], false);\n\nexport const getRenderEdit = state => state.getIn(['app', 'renderEdit'], false);\n","import { v1 as uuid } from 'uuid';\nimport * as ACTIONS from '../constants';\n\nexport const formSubmit = (action, payload) => {\n  if (action === 'edit') {\n    return updateItem(payload.get('id'), payload);\n  }\n\n  return addItem(payload.set('id', uuid()).set('createdAt', Date.now()).set('isCompleted', false));\n};\n\nexport const addItem = payload => ({\n  type: ACTIONS.ADD_ITEM,\n  payload,\n});\n\nexport const updateItem = (id, payload) => ({\n  type: ACTIONS.UPDATE_ITEM,\n  id,\n  payload,\n});\n\nexport const removeItem = id => ({\n  type: ACTIONS.REMOVE_ITEM,\n  id,\n});\n\nexport const setSelectedItemId = id => ({\n  type: ACTIONS.SET_SELECTED_ITEM_ID,\n  id,\n});\n\nexport const setRenderCreate = payload => ({\n  type: ACTIONS.SET_RENDER_CREATE,\n  payload,\n});\n\nexport const setRenderEdit = payload => ({\n  type: ACTIONS.SET_RENDER_EDIT,\n  payload,\n});\n\nexport const closePanel = () => ({\n  type: ACTIONS.CLOSE_PANEL,\n});\n\nexport const clearList = () => ({\n  type: ACTIONS.CLEAR_LIST,\n});\n\nexport const toggleAll = bool => ({\n  type: ACTIONS.TOGGLE_ALL,\n  bool,\n});\n\nexport const openCreatePanel = () => ({\n  type: ACTIONS.OPEN_CREATE_PANEL,\n});\n\nexport const openEditPanel = id => ({\n  type: ACTIONS.OPEN_EDIT_PANEL,\n  id,\n});\n\nexport const storeRetrievedTodos = payload => ({\n  type: ACTIONS.STORE_RETRIEVED_TODOS,\n  payload,\n});\n","export const humanize = str =>\n  str\n    .replace(/^[\\s_]+|[\\s_]+$/g, '')\n    .replace(/[_\\s]+/g, ' ')\n    .replace(/[-\\s]+/g, ' ')\n    .replace(/^[a-z]/, match => match.toUpperCase());\n\nexport const taskTypes = [\n  { value: 'dev-task', label: 'Development task' },\n  { value: 'daily-task', label: 'Daily task' },\n  { value: 'routine', label: 'Routine' },\n  { value: 'incidentals', label: 'Incidentals' },\n  { value: 'projects', label: 'Projects' },\n  { value: 'problems', label: 'Problems' },\n  { value: 'researching', label: 'Researching' },\n  { value: 'testing', label: 'Testing' },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport moment from 'moment';\nimport { humanize } from '../../utils';\nconst Layout = props => {\n  const {\n    item,\n    name,\n    isCompleted,\n    onRemoveItem,\n    handleChange,\n    handleBlur,\n    handleKeyDown,\n    handleCheck,\n    onOpenEditPanel,\n    handleDoubleClick,\n  } = props;\n\n  return (\n    <div className=\"rTableRow\" onDoubleClick={handleDoubleClick}>\n      <div className=\"rTableCell\">\n        <span>{item.get('id')}</span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>\n          {isCompleted ? (\n            <span className=\"item-completed\">{item.get('name')}</span>\n          ) : (\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter a task name...\"\n              value={name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              onKeyDown={handleKeyDown}\n            />\n          )}\n        </span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>{humanize(item.get('type'))}</span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>{item.get('description')}</span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>{moment(item.get('createdAt')).format('lll')}</span>\n      </div>\n      <div className=\"rTableCell rTableAction\">\n        <span>\n          <input type=\"checkbox\" name=\"isCompleted\" checked={isCompleted} onChange={handleCheck} />\n        </span>\n      </div>\n      <div className=\"rTableCell rTableAction\">\n        <button type=\"button\" onClick={() => onOpenEditPanel(item.get('id'))}>\n          Edit\n        </button>\n        <button type=\"button\" onClick={() => onRemoveItem(item.get('id'))}>\n          X\n        </button>\n      </div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  item: ImmutablePropTypes.contains({\n    name: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    id: PropTypes.string,\n  }),\n  name: PropTypes.string,\n  isCompleted: PropTypes.bool,\n  onRemoveItem: PropTypes.func,\n  handleChange: PropTypes.func,\n  handleBlur: PropTypes.func,\n  handleKeyDown: PropTypes.func,\n  handleCheck: PropTypes.func,\n  onOpenEditPanel: PropTypes.func,\n  handleDoubleClick: PropTypes.func,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fromJS } from 'immutable';\nimport Layout from './layout';\nimport { updateItem, removeItem, openEditPanel } from '../../redux/actions';\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n\n    const name = props.item.get('name');\n    const isCompleted = props.item.get('isCompleted');\n    this.state = {\n      name,\n      isCompleted,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const name = this.props.item.get('name');\n    const isCompleted = this.props.item.get('isCompleted');\n\n    if (prevProps.item.get('name') !== name) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ name });\n    }\n    if (prevProps.item.get('isCompleted') !== isCompleted) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ isCompleted });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  handleUpdate = () => {\n    const { item, onUpdateItem } = this.props;\n    const { name } = this.state;\n    /**\n     * Avoiding firing update event twice\n     * if user already pressed enter\n     */\n    if (item.get('name') !== name) {\n      onUpdateItem(item.get('id'), fromJS({ name }));\n    }\n  };\n\n  handleBlur = () => {\n    this.handleUpdate();\n  };\n\n  handleKeyDown = ({ keyCode }) => {\n    /**\n     * User pressed the enter key, update the input\n     * and global state\n     */\n    if (keyCode === 13) {\n      this.handleUpdate();\n    }\n  };\n\n  handleCheck = () => {\n    const { item, onUpdateItem } = this.props;\n    const { isCompleted } = this.state;\n    onUpdateItem(\n      item.get('id'),\n      fromJS({\n        isCompleted: !isCompleted,\n      }),\n    );\n    this.setState(prevState => ({\n      isCompleted: !prevState.isCompleted,\n    }));\n  };\n\n  handleDoubleClick = () => {\n    const { item } = this.props;\n    this.props.history.push(`/edit/${item.get('id')}`);\n  };\n\n  render() {\n    const { item, onRemoveItem, onOpenEditPanel } = this.props;\n    const { name, isCompleted } = this.state;\n\n    return (\n      <Layout\n        item={item}\n        name={name}\n        isCompleted={isCompleted}\n        onRemoveItem={onRemoveItem}\n        handleChange={this.handleChange}\n        handleBlur={this.handleBlur}\n        handleKeyDown={this.handleKeyDown}\n        handleCheck={this.handleCheck}\n        onOpenEditPanel={onOpenEditPanel}\n        handleSubmit={this.handleSubmit}\n        handleDoubleClick={this.handleDoubleClick}\n      />\n    );\n  }\n}\n\nItem.propTypes = {\n  item: ImmutablePropTypes.contains({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    isCompleted: PropTypes.bool,\n  }),\n  onRemoveItem: PropTypes.func,\n  onUpdateItem: PropTypes.func,\n  onOpenEditPanel: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n};\n\nconst actions = {\n  onUpdateItem: updateItem,\n  onRemoveItem: removeItem,\n  onOpenEditPanel: openEditPanel,\n};\n\nexport default connect(null, actions)(withRouter(Item));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Item from '../Item';\n\nconst Layout = props => {\n  const { items, checkedAll, handleCheck, ...rest } = props;\n  return (\n    <div className=\"rTable\">\n      <div className=\"rTableHeading\">\n        <div className=\"rTableHead\">\n          <span>ID</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Name</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Type</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Description</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Created at</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>\n            Completed\n            <input type=\"checkbox\" name=\"checkedAll\" checked={checkedAll} onChange={handleCheck} />\n          </span>\n        </div>\n        <div className=\"rTableHead rTableAction\">&nbsp;</div>\n      </div>\n\n      <div className=\"rTableBody\">\n        {items.map(item => (\n          <Item key={item.get('id')} item={item} {...rest} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  items: ImmutablePropTypes.listOf(\n    ImmutablePropTypes.contains({\n      name: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n  checkedAll: PropTypes.bool,\n  handleCheck: PropTypes.func,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Layout from './layout';\n\nimport { getAllItems } from '../../redux/selectors';\nimport { toggleAll } from '../../redux/actions';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkedAll: false,\n    };\n  }\n\n  handleCheck = () => {\n    const { checkedAll } = this.state;\n    this.props.onToggleAll(!checkedAll);\n\n    this.setState(prevState => ({\n      checkedAll: !prevState.checkedAll,\n    }));\n  };\n\n  render() {\n    const { checkedAll } = this.state;\n    const { items, ...rest } = this.props;\n\n    return <Layout items={items} checkedAll={checkedAll} handleCheck={this.handleCheck} {...rest} />;\n  }\n}\n\nList.propTypes = {\n  items: ImmutablePropTypes.listOf(\n    ImmutablePropTypes.contains({\n      name: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n  onToggleAll: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  items: getAllItems(state),\n});\n\nconst actions = {\n  onToggleAll: toggleAll,\n};\n\nexport default connect(mapStateToProps, actions)(List);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React from 'react';\nimport { Field } from 'redux-form/immutable';\nimport PropTypes from 'prop-types';\nimport { taskTypes } from '../../utils';\n\nconst Layout = props => {\n  const { key, handleSubmit, pristine, reset, submitting, mode } = props;\n\n  let content = (\n    <form onSubmit={handleSubmit} key={key} autoComplete=\"off\">\n      <label htmlFor=\"name\">\n        <span className=\"required\">Name:</span>\n        <Field name=\"name\" component=\"input\" type=\"text\" placeholder=\"Enter a task name...\" />\n      </label>\n\n      <label htmlFor=\"type\">\n        <span className=\"required\">Pick task type:</span>\n        <Field name=\"type\" component=\"select\">\n          <option value=\"\" disabled>\n            Select a type...\n          </option>\n          {taskTypes.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </Field>\n      </label>\n\n      <label htmlFor=\"description\">\n        <span>Description:</span>\n        <Field name=\"description\" component=\"textarea\" placeholder=\"Add a description...\" cols=\"30\" rows=\"5\" />\n      </label>\n\n      <div className=\"actions-inline\">\n        <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n\n  if (mode !== 'inline') {\n    content = (\n      <div className=\"App-main\">\n        <div className=\"App-list\">{content}</div>\n      </div>\n    );\n  }\n\n  return content;\n};\n\nLayout.propTypes = {\n  key: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  pristine: PropTypes.bool,\n  reset: PropTypes.func,\n  submitting: PropTypes.bool,\n  mode: PropTypes.string,\n};\n\nexport default Layout;\n","import { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form/immutable';\nimport { fromJS } from 'immutable';\nimport Layout from './layout';\nimport { formSubmit } from '../../redux/actions';\n\nconst Form = reduxForm({\n  onSubmit: (values, dispatch) => dispatch(formSubmit('create', values)),\n  destroyOnUnmount: true,\n})(Layout);\n\nconst mapStateToProps = (state, props) => ({\n  form: `form:${props.mode === 'inline' ? 'inline:' : ''}create`,\n  key: 'form:create',\n  initialValues: fromJS({}),\n});\n\nconst ConnectedForm = connect(mapStateToProps)(Form);\n\nexport default ConnectedForm;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React, { Component } from 'react';\nimport { Field } from 'redux-form/immutable';\nimport PropTypes from 'prop-types';\nimport { taskTypes } from '../../utils';\n\nclass Layout extends Component {\n  componentDidMount() {\n    const { mode, match, selectedItemId, setSelectedItemId } = this.props;\n    /**\n     * If form is not incrusted, then get\n     * id from url\n     */\n    if (!selectedItemId && mode !== 'inline') {\n      setSelectedItemId(match.params.id);\n    }\n  }\n\n  render() {\n    const { key, selectedItemId, handleSubmit, pristine, reset, submitting, mode } = this.props;\n\n    let content = (\n      <form onSubmit={handleSubmit} key={key} autoComplete=\"off\">\n        <label htmlFor=\"id\">\n          <span>ID:</span>\n          <span>{selectedItemId}</span>\n        </label>\n\n        <label htmlFor=\"name\">\n          <span className=\"required\">Name:</span>\n          <Field name=\"name\" component=\"input\" type=\"text\" placeholder=\"Enter a task name...\" />\n        </label>\n\n        <label htmlFor=\"type\">\n          <span className=\"required\">Pick task type:</span>\n          <Field name=\"type\" component=\"select\">\n            <option value=\"\" disabled>\n              Select a type...\n            </option>\n            {taskTypes.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </Field>\n        </label>\n\n        <label htmlFor=\"description\">\n          <span>Description:</span>\n          <Field name=\"description\" component=\"textarea\" placeholder=\"Add a description...\" cols=\"30\" rows=\"5\" />\n        </label>\n\n        <label className=\"label-checkbox\" htmlFor=\"isCompleted\">\n          <span>Is completed?</span>\n          <Field name=\"isCompleted\" component=\"input\" type=\"checkbox\" className=\"a11y-hidden\" />\n        </label>\n\n        <div className=\"actions-inline\">\n          <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n          <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n            Clear Values\n          </button>\n        </div>\n      </form>\n    );\n\n    if (mode !== 'inline') {\n      content = (\n        <div className=\"App-main\">\n          <div className=\"App-list\">{content}</div>\n        </div>\n      );\n    }\n\n    return content;\n  }\n}\n\nLayout.propTypes = {\n  key: PropTypes.string,\n  selectedItemId: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  setSelectedItemId: PropTypes.func,\n  pristine: PropTypes.bool,\n  reset: PropTypes.func,\n  submitting: PropTypes.bool,\n  mode: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Layout;\n","import { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form/immutable';\nimport Layout from './layout';\nimport { formSubmit, setSelectedItemId } from '../../redux/actions';\nimport { getSelectedItemId, getSelectedItem } from '../../redux/selectors';\n\nconst Form = reduxForm({\n  onSubmit: (values, dispatch) => dispatch(formSubmit('edit', values)),\n  destroyOnUnmount: true,\n})(Layout);\n\nconst mapStateToProps = (state, props) => ({\n  /**\n   * We use \"inline\" text to unmount/mount form\n   * when moving through menu, since we use same form\n   * component inline and whole page\n   */\n  form: `form:${props.mode === 'inline' ? 'inline:' : ''}${getSelectedItemId(state)}`,\n  key: `form:${getSelectedItemId(state)}`,\n  initialValues: getSelectedItem(state),\n  selectedItemId: getSelectedItemId(state),\n});\n\nconst actions = {\n  setSelectedItemId,\n};\n\nconst ConnectedForm = connect(mapStateToProps, actions)(Form);\n\nexport default ConnectedForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SidePanel = props => {\n  const { handleClose, children } = props;\n  return (\n    <div className=\"App-sidepanel\">\n      <button type=\"button\" className=\"close-panel\" onClick={handleClose}>\n        X\n      </button>\n      {children}\n    </div>\n  );\n};\nSidePanel.propTypes = {\n  children: PropTypes.shape({}),\n  handleClose: PropTypes.func,\n};\n\nexport default SidePanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport List from '../List';\nimport Create from '../Create';\nimport Edit from '../Edit';\nimport SidePanel from '../../components/SidePanel';\n\nconst Layout = props => {\n  const {\n    name,\n    handleInputChange,\n    handleSubmit,\n    renderCreate,\n    renderEdit,\n    selectedItemId,\n    onClearList,\n    onClosePanel,\n    onOpenCreatePanel,\n  } = props;\n\n  return (\n    <div className=\"App-main\">\n      <div className=\"App-list\">\n        <header>\n          <form onSubmit={handleSubmit} className=\"form-inline\" autoComplete=\"off\">\n            <input type=\"text\" name=\"name\" placeholder=\"Enter a text...\" value={name} onChange={handleInputChange} />\n            <input type=\"submit\" value=\"Add\" />\n\n            <button type=\"button\" onClick={onOpenCreatePanel}>\n              Create\n            </button>\n\n            <button type=\"button\" onClick={onClearList}>\n              Clear List\n            </button>\n          </form>\n        </header>\n\n        <div className=\"rTable-container\">\n          <List />\n        </div>\n      </div>\n\n      {renderCreate && (\n        <SidePanel handleClose={onClosePanel}>\n          <Create mode=\"inline\" />\n        </SidePanel>\n      )}\n      {renderEdit && selectedItemId && (\n        <SidePanel handleClose={onClosePanel}>\n          <Edit key={selectedItemId} mode=\"inline\" />\n        </SidePanel>\n      )}\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  renderCreate: PropTypes.bool,\n  renderEdit: PropTypes.bool,\n  selectedItemId: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  name: PropTypes.string,\n  handleInputChange: PropTypes.func,\n  onClearList: PropTypes.func,\n  onClosePanel: PropTypes.func,\n  onOpenCreatePanel: PropTypes.func,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { fromJS } from 'immutable';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v1 as uuid } from 'uuid';\n\nimport * as contentful from 'contentful';\nimport { getSelectedItemId, getRenderCreate, getRenderEdit } from '../../redux/selectors';\nimport { addItem, closePanel, clearList, openCreatePanel, storeRetrievedTodos } from '../../redux/actions';\nimport Layout from './layout';\n\nconst SPACE_ID = 'srlpekq85luo';\nconst ACCESS_TOKEN = 'evMFF1eK--2PX6Qqrlq8glrKOurVH1pdvaI-FRgmufU';\n\nconst client = contentful.createClient({\n  space: SPACE_ID,\n  accessToken: ACCESS_TOKEN,\n});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n    };\n  }\n\n  componentDidMount() {\n    this.storeRetrievedTodos();\n  }\n\n  storeRetrievedTodos = () => {\n    client\n      .getEntries({\n        content_type: 'todo',\n      })\n      .then(({ items }) => {\n        const todos = items.map(item => ({\n          ...item.fields,\n          createdAt: new Date(item.sys.createdAt).getTime(),\n        }));\n        this.props.storeRetrievedTodos(todos);\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    /**\n     * We prevent page from refreshing\n     */\n    e.preventDefault();\n\n    const { name } = this.state;\n\n    /**\n     * Text is empty, clean and return\n     */\n    if (name.trim() === '') {\n      this.setState({\n        name: '',\n      });\n      return;\n    }\n\n    /**\n     * New item with default data\n     */\n    const newItem = fromJS({\n      id: uuid(),\n      name,\n      description: '',\n      type: 'daily-task',\n      createdAt: Date.now(),\n      isCompleted: false,\n    });\n    /**\n     * We call the handler for new items and pass\n     * an object with new task and key\n     */\n    this.props.onAddItem(newItem);\n\n    this.setState({\n      name: '',\n    });\n  };\n\n  render() {\n    const { name } = this.state;\n    const { renderCreate, renderEdit, selectedItemId, onClearList, onClosePanel, onOpenCreatePanel } = this.props;\n\n    return (\n      <Layout\n        name={name}\n        handleInputChange={this.handleInputChange}\n        handleSubmit={this.handleSubmit}\n        renderCreate={renderCreate}\n        renderEdit={renderEdit}\n        selectedItemId={selectedItemId}\n        onClearList={onClearList}\n        onClosePanel={onClosePanel}\n        onOpenCreatePanel={onOpenCreatePanel}\n      />\n    );\n  }\n}\n\nMain.propTypes = {\n  renderCreate: PropTypes.bool,\n  renderEdit: PropTypes.bool,\n  selectedItemId: PropTypes.string,\n  onAddItem: PropTypes.func,\n  onClearList: PropTypes.func,\n  onClosePanel: PropTypes.func,\n  onOpenCreatePanel: PropTypes.func,\n  storeRetrievedTodos: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  renderCreate: getRenderCreate(state),\n  renderEdit: getRenderEdit(state),\n  selectedItemId: getSelectedItemId(state),\n});\n\nconst actions = {\n  onAddItem: addItem,\n  onClearList: clearList,\n  onClosePanel: closePanel,\n  onOpenCreatePanel: openCreatePanel,\n  storeRetrievedTodos,\n};\n\nexport default connect(mapStateToProps, actions)(Main);\n","import React from 'react';\n\nconst About = () => (\n  <div className=\"App-main\">\n    <div className=\"App-list\">\n      <h1>Tusa Inc</h1>\n      <h6>All rights reserved</h6>\n      <p>We are a company that makes ReactJs APPs for living</p>\n      <p>But when the night arrives... We get out the forbidden dance moves.</p>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Menu = () => (\n  <>\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <ul className=\"navbar-nav mr-auto\">\n        <li>\n          <Link to=\"/\" className=\"nav-link\">\n            Home\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/list\" className=\"nav-link\">\n            Todos\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/new\" className=\"nav-link\">\n            New Task\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/about\" className=\"nav-link\">\n            About\n          </Link>\n        </li>\n      </ul>\n    </nav>\n    <hr />\n  </>\n);\n\nexport default Menu;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div className=\"App-main\">\n    <div className=\"App-list\">\n      <div className=\"content-not-found\">\n        <h1>Not Found</h1>\n;\n      </div>\n    </div>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Home from '../../containers/Home';\nimport Main from '../../containers/Main';\nimport Create from '../../containers/Create';\nimport Edit from '../../containers/Edit';\nimport About from '../../containers/About';\nimport Menu from './Menu';\nimport NotFound from './NotFound';\n\nconst Routing = () => (\n  <div>\n    <HashRouter>\n      <Menu />\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/home\" component={Home} exact />\n        <Route path=\"/list\" component={Main} exact />\n        <Route path=\"/new\" component={Create} exact />\n        <Route path=\"/edit/:id\" component={Edit} exact />\n        <Route path=\"/about\" component={About} exact />\n        <Route component={NotFound} />\n        <Redirect to=\"/home\" />\n      </Switch>\n    </HashRouter>\n  </div>\n);\n\nexport default Routing;\n","import React from 'react';\n\nimport Routing from './components/Routing';\n\nimport logo from './assets/image/logo.svg';\nimport './assets/css/App.css';\nimport './assets/css/table.css';\nimport './assets/css/form.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Learn React\n      </a>\n    </header>\n\n    <Routing />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}