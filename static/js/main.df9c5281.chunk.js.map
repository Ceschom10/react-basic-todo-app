{"version":3,"sources":["assets/image/logo.svg","redux/constants/index.js","redux/reducers/appReducer.js","redux/reducers/index.js","redux/actions/index.js","redux/sagas/apiSaga.js","redux/store/index.js","containers/Home.js","redux/selectors/index.js","utils/index.js","containers/Item/layout.js","containers/Item/index.js","containers/List/layout.js","containers/List/index.js","containers/Create/layout.js","containers/Create/validate.js","containers/Create/index.js","containers/Edit/layout.js","containers/Edit/validate.js","containers/Edit/index.js","components/SidePanel.js","containers/Main/layout.js","containers/Main/index.js","containers/About.js","components/Routing/Menu.js","components/Routing/NotFound.js","components/Routing/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ADD_ITEM","STORE_ADDED_ITEM","STORE_UPDATED_ITEM","REMOVED_ITEM","SET_SELECTED_ITEM_ID","SET_RENDER_CREATE","SET_RENDER_EDIT","CLOSE_PANEL","CLEAR_LIST","TOGGLE_ALL","OPEN_CREATE_PANEL","OPEN_EDIT_PANEL","initialState","fromJS","items","renderCreate","renderEdit","selectedItemId","getItemIndex","state","entity","itemId","get","findIndex","item","appReducer","action","type","ACTIONS","update","unshift","payload","itemIndex","id","updateIn","merge","deleteIn","set","List","map","bool","reducers","combineReducers","app","form","formReducer","formSubmit","updateItem","toJS","addItem","storeAddedItem","storeUpdatedItem","storeRetrievedItems","watcherSaga","retrieveDataSaga","addItemSaga","updateItemSaga","removeItemSaga","SPACE_ID","client","contentful","space","accessToken","clientManagement","contentfulManagement","takeEvery","call","getData","put","getEntries","content_type","then","todos","fields","sys","createdAt","Date","getTime","console","log","catch","err","error","createItem","getSpace","createEntry","name","description","isCompleted","entry","publish","todo","Object","entries","forEach","key","value","getEntry","removeItem","unpublish","delete","initialiseSagaMiddleware","createSagaMiddleware","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","composeWithDevTools","applyMiddleware","compose","run","apiSaga","Home","className","style","maxWidth","textAlign","href","target","rel","getAllItems","getIn","getSelectedItemId","getSelectedItem","find","getRenderCreate","getRenderEdit","taskTypes","label","Layout","props","onRemoveItem","handleChange","handleBlur","handleKeyDown","handleCheck","onOpenEditPanel","handleDoubleClick","onDoubleClick","placeholder","onChange","onBlur","onKeyDown","replace","match","toUpperCase","moment","format","checked","onClick","Item","e","setState","handleUpdate","onUpdateItem","keyCode","prevState","history","push","prevProps","this","handleSubmit","Component","actions","connect","withRouter","checkedAll","rest","onToggleAll","pristine","reset","submitting","mode","content","onSubmit","autoComplete","htmlFor","component","disabled","option","cols","rows","validate","values","Form","reduxForm","dispatch","destroyOnUnmount","ConnectedForm","initialValues","setSelectedItemId","params","SidePanel","handleClose","children","handleInputChange","onClearList","onClosePanel","onOpenCreatePanel","Create","Edit","Main","preventDefault","trim","onAddItem","retrieveTodos","About","Menu","to","NotFound","Routing","path","exact","App","src","logo","alt","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.df9c5281.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","/**\n * action-types\n */\n\nexport const FORM_SUBMIT = 'app/MainApplication/FORM_SUBMIT';\n\nexport const ADD_ITEM = 'app/MainApplication/ADD_ITEM';\n\nexport const STORE_ADDED_ITEM = 'app/MainApplication/STORE_ADDED_ITEM';\n\nexport const UPDATE_ITEM = 'app/MainApplication/UPDATE_ITEM';\n\nexport const STORE_UPDATED_ITEM = 'app/MainApplication/STORE_UPDATED_ITEM';\n\nexport const REMOVE_ITEM = 'app/MainApplication/REMOVE_ITEM';\n\nexport const REMOVED_ITEM = 'app/MainApplication/REMOVED_ITEM';\n\nexport const SET_SELECTED_ITEM_ID = 'app/MainApplication/SET_SELECTED_ITEM_ID';\n\nexport const SET_RENDER_CREATE = 'app/MainApplication/SET_RENDER_CREATE';\n\nexport const SET_RENDER_EDIT = 'app/MainApplication/SET_RENDER_EDIT';\n\nexport const CLOSE_PANEL = 'app/MainApplication/CLOSE_PANEL';\n\nexport const CLEAR_LIST = 'app/MainApplication/CLEAR_LIST';\n\nexport const TOGGLE_ALL = 'app/MainApplication/TOGGLE_ALL';\n\nexport const OPEN_CREATE_PANEL = 'app/MainApplication/OPEN_CREATE_PANEL';\n\nexport const OPEN_EDIT_PANEL = 'app/MainApplication/OPEN_EDIT_PANEL';\n\nexport const RETRIEVE_ITEMS = 'app/MainApplication/RETRIEVE_ITEMS';\n\nexport const STORE_RETRIEVED_ITEMS = 'app/MainApplication/STORE_RETRIEVED_ITEMS';\n","import { fromJS, List } from 'immutable';\nimport * as ACTIONS from '../constants';\n\nconst initialState = fromJS({\n  items: [],\n  renderCreate: false,\n  renderEdit: false,\n  selectedItemId: '',\n});\n\nconst getItemIndex = (state, entity, itemId) => state.get(entity).findIndex(item => item.get('id') === itemId);\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTIONS.STORE_ADDED_ITEM: {\n      return state.update('items', items => items.unshift(action.payload));\n    }\n\n    case ACTIONS.STORE_UPDATED_ITEM: {\n      const itemIndex = getItemIndex(state, 'items', action.id);\n      return state.updateIn(['items', itemIndex], item => item.merge(action.payload));\n    }\n\n    case ACTIONS.REMOVED_ITEM: {\n      const itemIndex = getItemIndex(state, 'items', action.id);\n      if (state.get('selectedItemId') === action.id) {\n        return state.deleteIn(['items', itemIndex]).set('renderEdit', false).set('selectedItemId', '');\n      }\n      return state.deleteIn(['items', itemIndex]);\n    }\n\n    case ACTIONS.SET_SELECTED_ITEM_ID: {\n      return state.set('selectedItemId', action.id);\n    }\n\n    case ACTIONS.SET_RENDER_CREATE: {\n      return state.set('renderCreate', action.payload);\n    }\n\n    case ACTIONS.SET_RENDER_EDIT: {\n      return state.set('renderEdit', action.payload);\n    }\n\n    case ACTIONS.OPEN_CREATE_PANEL: {\n      return state.set('renderCreate', true).set('renderEdit', false).set('selectedItemId', '');\n    }\n\n    case ACTIONS.OPEN_EDIT_PANEL: {\n      return state.set('renderCreate', false).set('renderEdit', true).set('selectedItemId', action.id);\n    }\n\n    case ACTIONS.CLOSE_PANEL: {\n      return state.set('renderCreate', false).set('renderEdit', false).set('selectedItemId', '');\n    }\n\n    case ACTIONS.CLEAR_LIST: {\n      return state.set('items', new List([])).set('renderEdit', false).set('selectedItemId', '');\n    }\n\n    case ACTIONS.TOGGLE_ALL: {\n      return state.update('items', items => items.map(item => item.set('isCompleted', action.bool)));\n    }\n\n    case ACTIONS.STORE_RETRIEVED_ITEMS: {\n      return state.set('items', fromJS(action.payload));\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","import { combineReducers } from 'redux-immutable';\nimport { reducer as formReducer } from 'redux-form/immutable';\n\nimport appReducer from './appReducer';\n\nconst reducers = combineReducers({\n  app: appReducer,\n  // you have to pass formReducer under 'form' key,\n  // for custom keys look up the docs for 'getFormState'\n  form: formReducer,\n});\n\nexport default reducers;\n","import * as ACTIONS from '../constants';\n\nexport const formSubmit = (action, payload) => {\n  if (action === 'edit') {\n    return updateItem(payload.get('id'), payload.toJS());\n  }\n\n  return addItem(payload.toJS());\n};\n\nexport const addItem = payload => ({\n  type: ACTIONS.ADD_ITEM,\n  payload,\n});\n\nexport const storeAddedItem = payload => ({\n  type: ACTIONS.STORE_ADDED_ITEM,\n  payload,\n});\n\nexport const updateItem = (id, payload) => ({\n  type: ACTIONS.UPDATE_ITEM,\n  id,\n  payload,\n});\n\nexport const storeUpdatedItem = (id, payload) => ({\n  type: ACTIONS.STORE_UPDATED_ITEM,\n  id,\n  payload,\n});\n\nexport const removeItem = id => ({\n  type: ACTIONS.REMOVE_ITEM,\n  id,\n});\n\nexport const removedItem = id => ({\n  type: ACTIONS.REMOVED_ITEM,\n  id,\n});\n\nexport const setSelectedItemId = id => ({\n  type: ACTIONS.SET_SELECTED_ITEM_ID,\n  id,\n});\n\nexport const setRenderCreate = payload => ({\n  type: ACTIONS.SET_RENDER_CREATE,\n  payload,\n});\n\nexport const setRenderEdit = payload => ({\n  type: ACTIONS.SET_RENDER_EDIT,\n  payload,\n});\n\nexport const closePanel = () => ({\n  type: ACTIONS.CLOSE_PANEL,\n});\n\nexport const clearList = () => ({\n  type: ACTIONS.CLEAR_LIST,\n});\n\nexport const toggleAll = bool => ({\n  type: ACTIONS.TOGGLE_ALL,\n  bool,\n});\n\nexport const openCreatePanel = () => ({\n  type: ACTIONS.OPEN_CREATE_PANEL,\n});\n\nexport const openEditPanel = id => ({\n  type: ACTIONS.OPEN_EDIT_PANEL,\n  id,\n});\n\nexport const retrieveTodos = () => ({\n  type: ACTIONS.RETRIEVE_ITEMS,\n});\n\nexport const storeRetrievedItems = payload => ({\n  type: ACTIONS.STORE_RETRIEVED_ITEMS,\n  payload,\n});\n","import { takeEvery, call, put } from 'redux-saga/effects';\nimport { fromJS } from 'immutable';\n\nimport * as contentful from 'contentful';\nimport * as contentfulManagement from 'contentful-management';\n\nimport * as ACTIONS from '../constants';\nimport { storeRetrievedItems, storeAddedItem, storeUpdatedItem, removedItem } from '../actions';\n\nconst SPACE_ID = 'srlpekq85luo';\nconst ACCESS_TOKEN = 'evMFF1eK--2PX6Qqrlq8glrKOurVH1pdvaI-FRgmufU';\nconst ACCESS_TOKEN_MANAGEMENT = 'CFPAT-WAjUteVc06b2IhNAw7_DXGQUXCmv0ZMc6_m9obcABag';\n\nconst client = contentful.createClient({\n  space: SPACE_ID,\n  accessToken: ACCESS_TOKEN,\n});\n\nconst clientManagement = contentfulManagement.createClient({\n  accessToken: ACCESS_TOKEN_MANAGEMENT,\n});\n\nexport default function* watcherSaga() {\n  yield takeEvery(ACTIONS.RETRIEVE_ITEMS, retrieveDataSaga);\n  yield takeEvery(ACTIONS.ADD_ITEM, addItemSaga);\n  yield takeEvery(ACTIONS.UPDATE_ITEM, updateItemSaga);\n  yield takeEvery(ACTIONS.REMOVE_ITEM, removeItemSaga);\n}\n\n/**\n * GET DATA\n */\nfunction* retrieveDataSaga() {\n  try {\n    const payload = yield call(getData);\n    yield put(storeRetrievedItems(payload));\n  } catch (e) {\n    yield put({ type: 'API_ERRORED', payload: e });\n  }\n}\n\nfunction getData() {\n  return client\n    .getEntries({\n      content_type: 'todo',\n    })\n    .then(({ items }) => {\n      /**\n       * Transforming contentful data into array of objects\n       * with {id, name, type, description, createdAt}\n       */\n      const todos = items.map(item => ({\n        ...item.fields,\n        id: item.sys.id,\n        createdAt: new Date(item.sys.createdAt).getTime(),\n      }));\n      console.log(`%cEntries fetched from space...${SPACE_ID}`, 'background: #d7dae0; color: #282c34;', todos);\n      return fromJS(todos);\n    })\n    .catch(err => {\n      console.error(err);\n    });\n}\n\n/**\n * ADD ITEM\n */\nfunction* addItemSaga(action) {\n  try {\n    const payload = yield call(createItem, action);\n    yield put(storeAddedItem(payload));\n  } catch (e) {\n    yield put({ type: 'API_ERRORED', payload: e });\n  }\n}\n\nfunction createItem({ payload }) {\n  return clientManagement.getSpace(SPACE_ID).then(space =>\n    space\n      .createEntry('todo', {\n        fields: {\n          name: {\n            'en-US': payload.name,\n          },\n          type: {\n            'en-US': payload.type,\n          },\n          description: {\n            'en-US': payload.description,\n          },\n          isCompleted: {\n            'en-US': false,\n          },\n        },\n      })\n      .then(entry => {\n        /**\n         * Entry will be added as a draft,\n         * until we publish it\n         */\n        entry.publish();\n\n        const todo = {\n          id: entry.sys.id,\n          createdAt: new Date(entry.sys.createdAt).getTime(),\n        };\n        /**\n         * Transforming contentful new entry into\n         * object with {id, name, type, description, createdAt}\n         */\n        Object.entries(entry.fields).forEach(([key, value]) => {\n          todo[key] = value['en-US'];\n        });\n\n        console.log(`%cEntry ${entry.sys.id} created.`, 'background: #d7dae0; color: #282c34;', todo);\n        return fromJS(todo);\n      })\n      .catch(error => {\n        console.log('Error occurred while creating Entry');\n        console.error(error);\n      }),\n  );\n}\n\n/**\n * UPDATE ITEM\n */\nfunction* updateItemSaga(action) {\n  try {\n    const payload = yield call(updateItem, action);\n    yield put(storeUpdatedItem(action.id, payload));\n  } catch (e) {\n    yield put({ type: 'API_ERRORED', payload: e });\n  }\n}\n\nfunction updateItem({ id, payload }) {\n  return clientManagement\n    .getSpace(SPACE_ID)\n    .then(space => space.getEntry(id))\n    .then(entry => {\n      // eslint-disable-next-line no-param-reassign\n      delete payload.id;\n      // eslint-disable-next-line no-param-reassign\n      delete payload.createdAt;\n      Object.entries(payload).forEach(([key, value]) => {\n        // eslint-disable-next-line no-param-reassign\n        entry.fields[key]['en-US'] = value;\n      });\n      return entry.update();\n    })\n    .then(entry => {\n      /**\n       * Entry will be added as a draft,\n       * until we publish it\n       */\n      entry.publish();\n\n      const todo = {\n        id: entry.sys.id,\n      };\n      Object.entries(entry.fields).forEach(([key, value]) => {\n        todo[key] = value['en-US'];\n      });\n\n      console.log(`%cEntry ${entry.sys.id} updated.`, 'background: #d7dae0; color: #282c34;', todo);\n      return fromJS(todo);\n    })\n    .catch(error => {\n      console.log('Error occurred while updating Entry');\n      console.error(error);\n    });\n}\n\n/**\n * DELETE ITEM\n */\nfunction* removeItemSaga(action) {\n  try {\n    yield call(removeItem, action);\n    yield put(removedItem(action.id));\n  } catch (e) {\n    yield put({ type: 'API_ERRORED', payload: e });\n  }\n}\n\nfunction removeItem({ id }) {\n  return clientManagement\n    .getSpace(SPACE_ID)\n    .then(space => space.getEntry(id))\n    .then(entry => entry.unpublish())\n    .then(entry => {\n      console.log(`Entry ${entry.sys.id} unpublished.`);\n      return entry;\n    })\n    .then(entry => entry.delete())\n    .then(() => {\n      console.log(`%cEntry ${id} removed.`, 'background: #d7dae0; color: #282c34;');\n    })\n    .catch(error => {\n      console.log('Error occurred while removing Entry');\n      console.error(error);\n    });\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from '../reducers';\nimport apiSaga from '../sagas/apiSaga';\n\nconst initialiseSagaMiddleware = createSagaMiddleware();\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(\n  reducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    ? composeWithDevTools(applyMiddleware(initialiseSagaMiddleware))\n    : compose(applyMiddleware(initialiseSagaMiddleware)),\n);\n\ninitialiseSagaMiddleware.run(apiSaga);\n/* eslint-enable */\n\nexport default store;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"App-main\">\n    <div className=\"App-list\">\n      <h1>Welcome to our APP</h1>\n      <div style={{ maxWidth: 550, textAlign: 'justify' }}>\n        <p>\n          Contentful is a CMS tool to easily produce, manage and publish content on any website. Based on the cloud, it\n          allows any user, whether they are developers or content publishers, to work together to make their tasks\n          easier and more agile.\n        </p>\n      </div>\n\n      <a href=\"https://www.contentful.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Visit Contentful\n      </a>\n    </div>\n  </div>\n);\n\nexport default Home;\n","import { List } from 'immutable';\n\nexport const getAllItems = state => state.getIn(['app', 'items'], new List([]));\n\nexport const getItem = (state, id) => state.getIn(['app', 'items'], new List([])).find(item => item.get('id') === id);\n\nexport const getSelectedItemId = state => state.getIn(['app', 'selectedItemId']);\n\nexport const getSelectedItem = state =>\n  state.getIn(['app', 'items'], new List([])).find(item => item.get('id') === getSelectedItemId(state));\n\nexport const getRenderCreate = state => state.getIn(['app', 'renderCreate'], false);\n\nexport const getRenderEdit = state => state.getIn(['app', 'renderEdit'], false);\n","export const humanize = str =>\n  str\n    .replace(/^[\\s_]+|[\\s_]+$/g, '')\n    .replace(/[_\\s]+/g, ' ')\n    .replace(/[-\\s]+/g, ' ')\n    .replace(/^[a-z]/, match => match.toUpperCase());\n\nexport const taskTypes = [\n  { value: 'dev-task', label: 'Development task' },\n  { value: 'daily-task', label: 'Daily task' },\n  { value: 'routine', label: 'Routine' },\n  { value: 'incidentals', label: 'Incidentals' },\n  { value: 'projects', label: 'Projects' },\n  { value: 'problems', label: 'Problems' },\n  { value: 'researching', label: 'Researching' },\n  { value: 'testing', label: 'Testing' },\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport moment from 'moment';\nimport { humanize } from '../../utils';\nconst Layout = props => {\n  const {\n    item,\n    name,\n    isCompleted,\n    onRemoveItem,\n    handleChange,\n    handleBlur,\n    handleKeyDown,\n    handleCheck,\n    onOpenEditPanel,\n    handleDoubleClick,\n  } = props;\n\n  return (\n    <div className=\"rTableRow\" onDoubleClick={handleDoubleClick}>\n      <div className=\"rTableCell\">\n        <span>{item.get('id')}</span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>\n          {isCompleted ? (\n            <span className=\"item-completed\">{item.get('name')}</span>\n          ) : (\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter a task name...\"\n              value={name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              onKeyDown={handleKeyDown}\n            />\n          )}\n        </span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>{humanize(item.get('type'))}</span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>{item.get('description')}</span>\n      </div>\n      <div className=\"rTableCell\">\n        <span>{moment(item.get('createdAt')).format('lll')}</span>\n      </div>\n      <div className=\"rTableCell rTableAction\">\n        <span>\n          <input type=\"checkbox\" name=\"isCompleted\" checked={isCompleted} onChange={handleCheck} />\n        </span>\n      </div>\n      <div className=\"rTableCell rTableAction\">\n        <button type=\"button\" onClick={() => onOpenEditPanel(item.get('id'))}>\n          Edit\n        </button>\n        <button type=\"button\" onClick={() => onRemoveItem(item.get('id'))}>\n          X\n        </button>\n      </div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  item: ImmutablePropTypes.contains({\n    name: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    id: PropTypes.string,\n  }),\n  name: PropTypes.string,\n  isCompleted: PropTypes.bool,\n  onRemoveItem: PropTypes.func,\n  handleChange: PropTypes.func,\n  handleBlur: PropTypes.func,\n  handleKeyDown: PropTypes.func,\n  handleCheck: PropTypes.func,\n  onOpenEditPanel: PropTypes.func,\n  handleDoubleClick: PropTypes.func,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Layout from './layout';\nimport { updateItem, removeItem, openEditPanel } from '../../redux/actions';\n\nclass Item extends Component {\n  constructor(props) {\n    super(props);\n\n    const name = props.item.get('name');\n    const isCompleted = props.item.get('isCompleted');\n    this.state = {\n      name,\n      isCompleted,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const name = this.props.item.get('name');\n    const isCompleted = this.props.item.get('isCompleted');\n\n    if (prevProps.item.get('name') !== name) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ name });\n    }\n    if (prevProps.item.get('isCompleted') !== isCompleted) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ isCompleted });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  handleUpdate = () => {\n    const { item, onUpdateItem } = this.props;\n    const { name } = this.state;\n    /**\n     * Avoiding firing update event twice\n     * if user already pressed enter\n     */\n    if (item.get('name') !== name) {\n      onUpdateItem(item.get('id'), { name });\n    }\n  };\n\n  handleBlur = () => {\n    this.handleUpdate();\n  };\n\n  handleKeyDown = ({ keyCode }) => {\n    /**\n     * User pressed the enter key, update the input\n     * and global state\n     */\n    if (keyCode === 13) {\n      this.handleUpdate();\n    }\n  };\n\n  handleCheck = () => {\n    const { item, onUpdateItem } = this.props;\n    const { isCompleted } = this.state;\n    onUpdateItem(item.get('id'), {\n      isCompleted: !isCompleted,\n    });\n    this.setState(prevState => ({\n      isCompleted: !prevState.isCompleted,\n    }));\n  };\n\n  handleDoubleClick = () => {\n    const { item } = this.props;\n    this.props.history.push(`/edit/${item.get('id')}`);\n  };\n\n  render() {\n    const { item, onRemoveItem, onOpenEditPanel } = this.props;\n    const { name, isCompleted } = this.state;\n\n    return (\n      <Layout\n        item={item}\n        name={name}\n        isCompleted={isCompleted}\n        onRemoveItem={onRemoveItem}\n        handleChange={this.handleChange}\n        handleBlur={this.handleBlur}\n        handleKeyDown={this.handleKeyDown}\n        handleCheck={this.handleCheck}\n        onOpenEditPanel={onOpenEditPanel}\n        handleSubmit={this.handleSubmit}\n        handleDoubleClick={this.handleDoubleClick}\n      />\n    );\n  }\n}\n\nItem.propTypes = {\n  item: ImmutablePropTypes.contains({\n    name: PropTypes.string,\n    id: PropTypes.string,\n    isCompleted: PropTypes.bool,\n  }),\n  onRemoveItem: PropTypes.func,\n  onUpdateItem: PropTypes.func,\n  onOpenEditPanel: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n};\n\nconst actions = {\n  onUpdateItem: updateItem,\n  onRemoveItem: removeItem,\n  onOpenEditPanel: openEditPanel,\n};\n\nexport default connect(null, actions)(withRouter(Item));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Item from '../Item';\n\nconst Layout = props => {\n  const { items, checkedAll, handleCheck, ...rest } = props;\n  return (\n    <div className=\"rTable\">\n      <div className=\"rTableHeading\">\n        <div className=\"rTableHead\">\n          <span>ID</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Name</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Type</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Description</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>Created at</span>\n        </div>\n        <div className=\"rTableHead\">\n          <span>\n            Completed\n            <input type=\"checkbox\" name=\"checkedAll\" checked={checkedAll} onChange={handleCheck} />\n          </span>\n        </div>\n        <div className=\"rTableHead rTableAction\">&nbsp;</div>\n      </div>\n\n      <div className=\"rTableBody\">\n        {items.map(item => (\n          <Item key={item.get('id')} item={item} {...rest} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  items: ImmutablePropTypes.listOf(\n    ImmutablePropTypes.contains({\n      name: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n  checkedAll: PropTypes.bool,\n  handleCheck: PropTypes.func,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Layout from './layout';\n\nimport { getAllItems } from '../../redux/selectors';\nimport { toggleAll } from '../../redux/actions';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkedAll: false,\n    };\n  }\n\n  handleCheck = () => {\n    const { checkedAll } = this.state;\n    this.props.onToggleAll(!checkedAll);\n\n    this.setState(prevState => ({\n      checkedAll: !prevState.checkedAll,\n    }));\n  };\n\n  render() {\n    const { checkedAll } = this.state;\n    const { items, ...rest } = this.props;\n\n    return <Layout items={items} checkedAll={checkedAll} handleCheck={this.handleCheck} {...rest} />;\n  }\n}\n\nList.propTypes = {\n  items: ImmutablePropTypes.listOf(\n    ImmutablePropTypes.contains({\n      name: PropTypes.string,\n      id: PropTypes.string,\n    }),\n  ),\n  onToggleAll: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  items: getAllItems(state),\n});\n\nconst actions = {\n  onToggleAll: toggleAll,\n};\n\nexport default connect(mapStateToProps, actions)(List);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React from 'react';\nimport { Field } from 'redux-form/immutable';\nimport PropTypes from 'prop-types';\nimport { taskTypes } from '../../utils';\n\nconst Layout = props => {\n  const { key, handleSubmit, pristine, reset, submitting, mode } = props;\n\n  let content = (\n    <form onSubmit={handleSubmit} key={key} autoComplete=\"off\">\n      <label htmlFor=\"name\">\n        <span className=\"required\">Name:</span>\n        <Field name=\"name\" component=\"input\" type=\"text\" placeholder=\"Enter a task name...\" />\n      </label>\n\n      <label htmlFor=\"type\">\n        <span className=\"required\">Pick task type:</span>\n        <Field name=\"type\" component=\"select\">\n          <option value=\"\" disabled>\n            Select a type...\n          </option>\n          {taskTypes.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </Field>\n      </label>\n\n      <label htmlFor=\"description\">\n        <span>Description:</span>\n        <Field name=\"description\" component=\"textarea\" placeholder=\"Add a description...\" cols=\"30\" rows=\"5\" />\n      </label>\n\n      <div className=\"actions-inline\">\n        <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  );\n\n  if (mode !== 'inline') {\n    content = (\n      <div className=\"App-main\">\n        <div className=\"App-list\">{content}</div>\n      </div>\n    );\n  }\n\n  return content;\n};\n\nLayout.propTypes = {\n  key: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  pristine: PropTypes.bool,\n  reset: PropTypes.func,\n  submitting: PropTypes.bool,\n  mode: PropTypes.string,\n};\n\nexport default Layout;\n","const validate = values => ({\n  name: !values.get('name') && 'Field cannot be empty.',\n  type: !values.get('type') && 'Field cannot be empty.',\n});\n\nexport default validate;\n","import { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form/immutable';\nimport { fromJS } from 'immutable';\nimport Layout from './layout';\nimport { formSubmit } from '../../redux/actions';\nimport validate from './validate';\n\nconst Form = reduxForm({\n  onSubmit: (values, dispatch) => dispatch(formSubmit('create', values)),\n  validate,\n  destroyOnUnmount: true,\n})(Layout);\n\nconst mapStateToProps = (state, props) => ({\n  form: `form:${props.mode === 'inline' ? 'inline:' : ''}create`,\n  key: 'form:create',\n  initialValues: fromJS({}),\n});\n\nconst ConnectedForm = connect(mapStateToProps)(Form);\n\nexport default ConnectedForm;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n\nimport React, { Component } from 'react';\nimport { Field } from 'redux-form/immutable';\nimport PropTypes from 'prop-types';\nimport { taskTypes } from '../../utils';\n\nclass Layout extends Component {\n  componentDidMount() {\n    const { mode, match, selectedItemId, setSelectedItemId } = this.props;\n    /**\n     * If form is not incrusted, then get\n     * id from url\n     */\n    if (!selectedItemId && mode !== 'inline') {\n      setSelectedItemId(match.params.id);\n    }\n  }\n\n  render() {\n    const { key, selectedItemId, handleSubmit, pristine, reset, submitting, mode } = this.props;\n\n    let content = (\n      <form onSubmit={handleSubmit} key={key} autoComplete=\"off\">\n        <label htmlFor=\"id\">\n          <span>ID:</span>\n          <span>{selectedItemId}</span>\n        </label>\n\n        <label htmlFor=\"name\">\n          <span className=\"required\">Name:</span>\n          <Field name=\"name\" component=\"input\" type=\"text\" placeholder=\"Enter a task name...\" />\n        </label>\n\n        <label htmlFor=\"type\">\n          <span className=\"required\">Pick task type:</span>\n          <Field name=\"type\" component=\"select\">\n            <option value=\"\" disabled>\n              Select a type...\n            </option>\n            {taskTypes.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </Field>\n        </label>\n\n        <label htmlFor=\"description\">\n          <span>Description:</span>\n          <Field name=\"description\" component=\"textarea\" placeholder=\"Add a description...\" cols=\"30\" rows=\"5\" />\n        </label>\n\n        <label className=\"label-checkbox\" htmlFor=\"isCompleted\">\n          <span>Is completed?</span>\n          <Field name=\"isCompleted\" component=\"input\" type=\"checkbox\" className=\"a11y-hidden\" />\n        </label>\n\n        <div className=\"actions-inline\">\n          <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n          <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n            Clear Values\n          </button>\n        </div>\n      </form>\n    );\n\n    if (mode !== 'inline') {\n      content = (\n        <div className=\"App-main\">\n          <div className=\"App-list\">{content}</div>\n        </div>\n      );\n    }\n\n    return content;\n  }\n}\n\nLayout.propTypes = {\n  key: PropTypes.string,\n  selectedItemId: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  setSelectedItemId: PropTypes.func,\n  pristine: PropTypes.bool,\n  reset: PropTypes.func,\n  submitting: PropTypes.bool,\n  mode: PropTypes.string,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Layout;\n","const validate = values => ({\n  name: !values.get('name') && 'Field cannot be empty.',\n  type: !values.get('type') && 'Field cannot be empty.',\n});\n\nexport default validate;\n","import { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form/immutable';\nimport Layout from './layout';\nimport { formSubmit, setSelectedItemId } from '../../redux/actions';\nimport { getSelectedItemId, getSelectedItem } from '../../redux/selectors';\nimport validate from './validate';\n\nconst Form = reduxForm({\n  onSubmit: (values, dispatch) => dispatch(formSubmit('edit', values)),\n  validate,\n  destroyOnUnmount: true,\n})(Layout);\n\nconst mapStateToProps = (state, props) => ({\n  /**\n   * We use \"inline\" text to unmount/mount form\n   * when moving through menu, since we use same form\n   * component inline and whole page\n   */\n  form: `form:${props.mode === 'inline' ? 'inline:' : ''}${getSelectedItemId(state)}`,\n  key: `form:${getSelectedItemId(state)}`,\n  initialValues: getSelectedItem(state),\n  selectedItemId: getSelectedItemId(state),\n});\n\nconst actions = {\n  setSelectedItemId,\n};\n\nconst ConnectedForm = connect(mapStateToProps, actions)(Form);\n\nexport default ConnectedForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SidePanel = props => {\n  const { handleClose, children } = props;\n  return (\n    <div className=\"App-sidepanel\">\n      <button type=\"button\" className=\"close-panel\" onClick={handleClose}>\n        X\n      </button>\n      {children}\n    </div>\n  );\n};\nSidePanel.propTypes = {\n  children: PropTypes.shape({}),\n  handleClose: PropTypes.func,\n};\n\nexport default SidePanel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport List from '../List';\nimport Create from '../Create';\nimport Edit from '../Edit';\nimport SidePanel from '../../components/SidePanel';\n\nconst Layout = props => {\n  const {\n    name,\n    handleInputChange,\n    handleSubmit,\n    renderCreate,\n    renderEdit,\n    selectedItemId,\n    onClearList,\n    onClosePanel,\n    onOpenCreatePanel,\n  } = props;\n\n  return (\n    <div className=\"App-main\">\n      <div className=\"App-list\">\n        <header>\n          <form onSubmit={handleSubmit} className=\"form-inline\" autoComplete=\"off\">\n            <input type=\"text\" name=\"name\" placeholder=\"Enter a text...\" value={name} onChange={handleInputChange} />\n            <input type=\"submit\" value=\"Add\" />\n\n            <button type=\"button\" onClick={onOpenCreatePanel}>\n              Create\n            </button>\n\n            <button type=\"button\" onClick={onClearList}>\n              Clear List\n            </button>\n          </form>\n        </header>\n\n        <div className=\"rTable-container\">\n          <List />\n        </div>\n      </div>\n\n      {renderCreate && (\n        <SidePanel handleClose={onClosePanel}>\n          <Create mode=\"inline\" />\n        </SidePanel>\n      )}\n      {renderEdit && selectedItemId && (\n        <SidePanel handleClose={onClosePanel}>\n          <Edit key={selectedItemId} mode=\"inline\" />\n        </SidePanel>\n      )}\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  renderCreate: PropTypes.bool,\n  renderEdit: PropTypes.bool,\n  selectedItemId: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  name: PropTypes.string,\n  handleInputChange: PropTypes.func,\n  onClearList: PropTypes.func,\n  onClosePanel: PropTypes.func,\n  onOpenCreatePanel: PropTypes.func,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { getSelectedItemId, getRenderCreate, getRenderEdit } from '../../redux/selectors';\nimport { addItem, closePanel, clearList, openCreatePanel, retrieveTodos } from '../../redux/actions';\nimport Layout from './layout';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n    };\n  }\n\n  componentDidMount() {\n    this.props.retrieveTodos();\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    /**\n     * We prevent page from refreshing\n     */\n    e.preventDefault();\n\n    const { name } = this.state;\n\n    /**\n     * Text is empty, clean and return\n     */\n    if (name.trim() === '') {\n      this.setState({\n        name: '',\n      });\n      return;\n    }\n\n    /**\n     * We call the handler for new items and pass\n     * an object with new task and key\n     */\n    this.props.onAddItem({\n      name,\n      description: '',\n      type: 'daily-task',\n    });\n\n    this.setState({\n      name: '',\n    });\n  };\n\n  render() {\n    const { name } = this.state;\n    const { renderCreate, renderEdit, selectedItemId, onClearList, onClosePanel, onOpenCreatePanel } = this.props;\n\n    return (\n      <Layout\n        name={name}\n        handleInputChange={this.handleInputChange}\n        handleSubmit={this.handleSubmit}\n        renderCreate={renderCreate}\n        renderEdit={renderEdit}\n        selectedItemId={selectedItemId}\n        onClearList={onClearList}\n        onClosePanel={onClosePanel}\n        onOpenCreatePanel={onOpenCreatePanel}\n      />\n    );\n  }\n}\n\nMain.propTypes = {\n  renderCreate: PropTypes.bool,\n  renderEdit: PropTypes.bool,\n  selectedItemId: PropTypes.string,\n  onAddItem: PropTypes.func,\n  onClearList: PropTypes.func,\n  onClosePanel: PropTypes.func,\n  onOpenCreatePanel: PropTypes.func,\n  retrieveTodos: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  renderCreate: getRenderCreate(state),\n  renderEdit: getRenderEdit(state),\n  selectedItemId: getSelectedItemId(state),\n});\n\nconst actions = {\n  onAddItem: addItem,\n  onClearList: clearList,\n  onClosePanel: closePanel,\n  onOpenCreatePanel: openCreatePanel,\n  retrieveTodos,\n};\n\nexport default connect(mapStateToProps, actions)(Main);\n","import React from 'react';\n\nconst About = () => (\n  <div className=\"App-main\">\n    <div className=\"App-list\">\n      <h1>Tusa Inc</h1>\n      <h6>All rights reserved</h6>\n      <p>We are a company that makes ReactJs APPs for living</p>\n      <p>But when the night arrives... We get out the forbidden dance moves.</p>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../assets/css/menu.css';\n\nconst Menu = () => (\n  <>\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <ul className=\"navbar-nav mr-auto\">\n        <li>\n          <Link to=\"/\" className=\"nav-link\">\n            Home\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/list\" className=\"nav-link\">\n            Todos\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/new\" className=\"nav-link\">\n            New Task\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/about\" className=\"nav-link\">\n            About\n          </Link>\n        </li>\n      </ul>\n    </nav>\n    <hr />\n  </>\n);\n\nexport default Menu;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div className=\"App-main\">\n    <div className=\"App-list\">\n      <div className=\"content-not-found\">\n        <h1>Not Found</h1>\n;\n      </div>\n    </div>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { HashRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport Home from '../../containers/Home';\nimport Main from '../../containers/Main';\nimport Create from '../../containers/Create';\nimport Edit from '../../containers/Edit';\nimport About from '../../containers/About';\nimport Menu from './Menu';\nimport NotFound from './NotFound';\n\nconst Routing = () => (\n  <div>\n    <HashRouter>\n      <Menu />\n      <Switch>\n        <Route path=\"/\" component={Home} exact />\n        <Route path=\"/home\" component={Home} exact />\n        <Route path=\"/list\" component={Main} exact />\n        <Route path=\"/new\" component={Create} exact />\n        <Route path=\"/edit/:id\" component={Edit} exact />\n        <Route path=\"/about\" component={About} exact />\n        <Route component={NotFound} />\n        <Redirect to=\"/home\" />\n      </Switch>\n    </HashRouter>\n  </div>\n);\n\nexport default Routing;\n","import React from 'react';\n\nimport Routing from './components/Routing';\n\nimport logo from './assets/image/logo.svg';\nimport './assets/css/App.css';\nimport './assets/css/table.css';\nimport './assets/css/form.css';\n\nconst App = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Learn React\n      </a>\n    </header>\n\n    <Routing />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}